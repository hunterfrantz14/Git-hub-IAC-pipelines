name: Terraform CI

on:
  push:
    branches:
      - dev
      - qa
      - main
  pull_request:
    branches:
      - dev
      - qa
      - main
  workflow_dispatch:

jobs:
  terraform-ci:
    runs-on: ubuntu-latest
    env:
      TF_VERSION: 1.5.7
      AWS_REGION: us-east-1
      TFVARS: dev.tfvars  # Default fallback

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v3

      - name: 🔧 Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🧹 Remove all Terraform caches
        run: |
          echo "Cleaning all .terraform folders"
          find . -type d -name ".terraform" -exec rm -rf {} +
          rm -f .terraform.lock.hcl || true

      - name: 🌍 Set tfvars file based on branch
        id: tfvars
        run: |
          echo "Branch: $GITHUB_REF_NAME"
          if [ "$GITHUB_REF_NAME" = "main" ]; then
            echo "TFVARS=prod.tfvars" >> $GITHUB_ENV
          elif [ "$GITHUB_REF_NAME" = "qa" ]; then
            echo "TFVARS=qa.tfvars" >> $GITHUB_ENV
          else
            echo "TFVARS=dev.tfvars" >> $GITHUB_ENV
          fi

      # EC2 Module
      - name: ⚙️ Terraform Init EC2
        run: terraform init
        working-directory: infrastructure/ec2

      - name: 🧪 Terraform Validate EC2
        run: terraform validate
        working-directory: infrastructure/ec2

      - name: 📋 Terraform Plan EC2
        run: terraform plan -var-file=${{ env.TFVARS }}
        working-directory: infrastructure/ec2

      # S3 Module
      - name: ⚙️ Terraform Init S3
        run: terraform init
        working-directory: infrastructure/s3

      - name: 🧪 Terraform Validate S3
        run: terraform validate
        working-directory: infrastructure/s3

      - name: 📋 Terraform Plan S3
        run: terraform plan -var-file=${{ env.TFVARS }}
        working-directory: infrastructure/s3

      - name: ✅ Set workflow success output
        id: set_output
        run: echo "terraform_status=success" >> $GITHUB_ENV
